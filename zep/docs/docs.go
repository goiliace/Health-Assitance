// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/collection": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns a list of all DocumentCollections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Gets a list of DocumentCollections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.DocumentCollectionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns a DocumentCollection if it exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Gets a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "If a collection with the same name already exists, an error will be returned.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Creates a new DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Collection",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDocumentCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "If a collection with the same name already exists, it will be overwritten.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Deletes a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Updates a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document Collection",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDocumentCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/document": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates Documents in a specified DocumentCollection and returns their UUIDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Creates Multiple Documents in a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Array of Documents to be created",
                        "name": "documents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateDocumentRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/document/batchDelete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes specified Documents from a DocumentCollection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Batch Deletes Documents from a DocumentCollection by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UUIDs of the Documents to be deleted",
                        "name": "documentUUIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/document/batchGet": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns Documents from a DocumentCollection specified by UUID or ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Batch Gets Documents from a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UUIDs and IDs of the Documents to be fetched",
                        "name": "documentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetDocumentListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.DocumentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/document/batchUpdate": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates Documents in a specified DocumentCollection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Batch Updates Documents in a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Array of Documents to be updated",
                        "name": "documents",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UpdateDocumentListRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/document/uuid/{documentUUID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns specified Document from a DocumentCollection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Gets a Document from a DocumentCollection by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID of the Document to be updated",
                        "name": "documentUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete specified Document from a DocumentCollection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Delete Document from a DocumentCollection by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID of the Document to be deleted",
                        "name": "documentUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Document Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Updates a Document in a DocumentCollection by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID of the Document to be updated",
                        "name": "documentUUID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document to be updated",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/index/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates an index for the specified DocumentCollection to improve query performance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Creates an index for a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force index creation, even if there are too few documents to index",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/collection/{collectionName}/search": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Searches Documents in a DocumentCollection based on provided search criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Searches Documents in a DocumentCollection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Document Collection",
                        "name": "collectionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned documents",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Search criteria",
                        "name": "searchPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentSearchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Document"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get all sessions with optional limit and cursor for pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Returns all sessions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Session"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add session by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Add a session",
                "parameters": [
                    {
                        "description": "Session",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{sessionId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get session by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Returns a session by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add session by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Add a session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Session",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{sessionId}/memory": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get memory by session id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memory"
                ],
                "summary": "Returns a memory (latest summary and list of messages) for a given session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Last N messages. Overrides memory_window configuration",
                        "name": "lastn",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Memory"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add memory messages by session id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memory"
                ],
                "summary": "Add memory messages to a given session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Memory messages",
                        "name": "memoryMessages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Memory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete memory messages by session id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memory"
                ],
                "summary": "Delete memory messages for a given session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/sessions/{sessionId}/search": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "search memory messages by session id and query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search memory messages for a given session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Search query",
                        "name": "searchPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MemorySearchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MemorySearchResult"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list all users with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "List all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Returns a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{userId}/sessions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list all sessions for a user by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "List all sessions for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Session"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apihandlers.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apihandlers.APIError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.CreateDocumentCollectionRequest": {
            "type": "object",
            "required": [
                "embedding_dimensions",
                "is_auto_embedded",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "embedding_dimensions": {
                    "type": "integer",
                    "maximum": 2000,
                    "minimum": 8
                },
                "is_auto_embedded": {
                    "description": "these needs to be pointers so that we can distinguish between false and unset when validating",
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3
                }
            }
        },
        "models.CreateDocumentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string",
                    "maxLength": 100
                },
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "models.CreateSessionRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "session_id": {
                    "type": "string"
                },
                "user_id": {
                    "description": "Must be a pointer to allow for null values",
                    "type": "string"
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Document": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "documentID": {
                    "type": "string"
                },
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "isEmbedded": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updatedAt": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.DocumentCollectionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document_count": {
                    "description": "Number of documents in the collection",
                    "type": "integer"
                },
                "document_embedded_count": {
                    "description": "Number of documents with embeddings",
                    "type": "integer"
                },
                "embedding_dimensions": {
                    "type": "integer"
                },
                "embedding_model_name": {
                    "type": "string"
                },
                "is_auto_embedded": {
                    "type": "boolean"
                },
                "is_indexed": {
                    "type": "boolean"
                },
                "is_normalized": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.DocumentResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "is_embedded": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.DocumentSearchPayload": {
            "type": "object",
            "properties": {
                "collection_name": {
                    "type": "string"
                },
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "mmr_lambda": {
                    "type": "number"
                },
                "search_type": {
                    "$ref": "#/definitions/models.SearchType"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.GetDocumentListRequest": {
            "type": "object",
            "properties": {
                "document_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Memory": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "summary": {
                    "$ref": "#/definitions/models.Summary"
                }
            }
        },
        "models.MemorySearchPayload": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "mmr_lambda": {
                    "type": "number"
                },
                "search_scope": {
                    "$ref": "#/definitions/models.SearchScope"
                },
                "search_type": {
                    "$ref": "#/definitions/models.SearchType"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.MemorySearchResult": {
            "type": "object",
            "properties": {
                "dist": {
                    "type": "number"
                },
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "message": {
                    "$ref": "#/definitions/models.Message"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "summary": {
                    "$ref": "#/definitions/models.Summary"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "role": {
                    "type": "string"
                },
                "token_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.SearchScope": {
            "type": "string",
            "enum": [
                "messages",
                "summary"
            ],
            "x-enum-varnames": [
                "SearchScopeMessages",
                "SearchScopeSummary"
            ]
        },
        "models.SearchType": {
            "type": "string",
            "enum": [
                "similarity",
                "mmr"
            ],
            "x-enum-varnames": [
                "SearchTypeSimilarity",
                "SearchTypeMMR"
            ]
        },
        "models.Session": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "session_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "Must be a pointer to allow for null values",
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.Summary": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "recent_message_uuid": {
                    "description": "The most recent message UUID that was used to generate this summary",
                    "type": "string"
                },
                "token_count": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDocumentCollectionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "models.UpdateDocumentListRequest": {
            "type": "object",
            "required": [
                "uuid"
            ],
            "properties": {
                "document_id": {
                    "type": "string",
                    "maxLength": 40
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDocumentRequest": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "maxLength": 40
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "models.UpdateSessionRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "user_id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.x",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Zep REST-like API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
