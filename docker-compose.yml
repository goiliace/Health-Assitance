version: '3'

services:
  api:
      build:
        context: .
        dockerfile: Dockerfile
      ports:
        - "8055:8055"
      env_file:
        - .env 
      deploy:
        resources:
          reservations:
            devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
      networks:
        - zep-network
        
  db:
    image: ghcr.io/getzep/postgres:latest
    container_name: zep-postgres
    restart: on-failure
    shm_size: "128mb"  # Increase this if vacuuming fails with a "no space left on device" error
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    build:
      context: ./zep
      dockerfile: Dockerfile.postgres
    networks:
      - zep-network
    volumes:
      - zep-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nlp:
    image: ghcr.io/getzep/zep-nlp-server:latest
    container_name: zep-nlp
    env_file:
      - .env  # You can set your embedding-related variables here
    restart: on-failure
    networks:
      - zep-network
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/5557' || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  zep:
    image: ghcr.io/getzep/zep:latest
    container_name: zep
    restart: on-failure
    depends_on:
        db:
          condition: service_healthy
        nlp:
          condition: service_healthy
    ports:
        - "8000:8000"
    volumes:
      - ./zep/config.yaml:/app/config.yaml
    environment:
      - ZEP_STORE_POSTGRES_DSN=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      - ZEP_NLP_SERVER_URL=http://nlp:5557
      - ZEP_EXTRACTORS_DOCUMENTS_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_DOCUMENTS_EMBEDDINGS_DIMENSIONS=1536
      - ZEP_EXTRACTORS_MESSAGES_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_MESSAGES_EMBEDDINGS_DIMENSIONS=1536
      - ZEP_EXTRACTORS_MESSAGES_SUMMARIZER_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_MESSAGES_SUMMARIZER_EMBEDDINGS_DIMENSIONS=1536
    env_file:
      - .env  # Store your OpenAI API key here as ZEP_OPENAI_API_KEY
    build:
      context: ./zep
      dockerfile: Dockerfile
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8000' || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - zep-network

  
      
networks:
  zep-network:
    driver: bridge

volumes:
  zep-db:
